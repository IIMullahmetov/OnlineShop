@model PagedList.IPagedList<OnlineShopApi.ViewModels.Product.GetProductListViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "ProductList";
}

@section scripts{
	<script>
		$(function () {
			//$('#btn-all').on('click', function () {
			//	$.get('/api/movies', function (data) {
			//		$('#result').empty();
			//		$.each(data, function (i, v) {
			//			$('#result').html($('#result').html() + v.Title + '<br />');
			//		});
			//	}, 'json');
			//});
			$('#btn').on('click', Add = function (id) {
				$.ajax({
					type: 'POST',
					url: '../../product/add_product_to_basket',
					data: {
						"id": id
					}
				});
			});
			$('#btn-delete').on('click', function Delete(id) {
				$.ajax({
					type: 'Delete',
					url: '/api/movies?id=' + $('#MovieId').val()
				});
			});
		});
</script>


}

<h2>ProductList</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Name)*@
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Price)*@
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Category)*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id }) |
			<input type="button" value="+" onclick="Add(@item.Id);" />
			<input type="button" value="-" onclick="Delete(@item.Id);" />

			@*@Html.ActionLink("+", "add_product_to_basket", new { id = item.Id }) |*@
			@*@Html.ActionLink("-", "delete_product_from_basket", new { id = item.Id })*@ 
        </td>
    </tr>
}

</table>
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

@Html.PagedListPager(Model, id => Url.Action("List", "Product",  new { id } ))

